<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">

<!--    开启注解扫描, 一般只负责controller-->
    <context:component-scan base-package="com.mao"/>

<!--    配置视图解析器, 解析Thymeleaf页面类型-->
    <bean id="viewResolver" class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <property name="characterEncoding" value="UTF-8"/>
<!--        配置模板渲染引擎渲染的元素，告诉系统页面路径和类型，也就是页面文件的前缀和后缀-->
        <property name="templateEngine">
            <bean class="org.thymeleaf.spring5.SpringTemplateEngine">
                <property name="templateResolver">
                    <bean class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
                        <property name="prefix" value="/WEB-INF/templates/"/>
                        <property name="suffix" value=".html"/>
                        <property name="templateMode" value="HTML5"/>
                        <property name="characterEncoding" value="UTF-8"/>
                    </bean>
                </property>
            </bean>
    </property>
    </bean>

<!--    配置文件解析器-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
<!--          设置文件上传的编码格式的解析-->
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="maxUploadSize" value="1024000000"/>
    </bean>

<!--    解析所有的静态信息-->
    <mvc:annotation-driven/>

<!--    配置拦截器-->
<!--    <mvc:interceptors>-->
<!--&lt;!&ndash;        定义全局拦截器，对所有的请求都会进行拦截&ndash;&gt;-->
<!--&lt;!&ndash;        <bean class="com.mao.utils.MyInterceptor"/>&ndash;&gt;-->

<!--&lt;!&ndash;        一般情况下定义子拦截器,可以指定拦截的地址和放行的地址&ndash;&gt;-->
<!--        <mvc:interceptor>-->
<!--&lt;!&ndash;            指定拦截的路径,/**表示拦截所有的地址&ndash;&gt;-->
<!--            <mvc:mapping path="/**"/>-->
<!--&lt;!&ndash;            指定放行的路径&ndash;&gt;-->
<!--            <mvc:exclude-mapping path="/login"/>-->
<!--            <mvc:exclude-mapping path="/interceptor/login"/>-->
<!--            <mvc:exclude-mapping path="/interceptor/"/>-->
<!--            <mvc:exclude-mapping path="/"/>-->
<!--            <bean class="com.mao.utils.MyInterceptor"/>-->
<!--        </mvc:interceptor>-->

<!--        <mvc:interceptor>-->
<!--            <mvc:mapping path="/**"/>-->
<!--            <mvc:exclude-mapping path="/login"/>-->
<!--            <bean class="com.mao.utils.MyInterceptor2"/>-->
<!--        </mvc:interceptor>-->
<!--    </mvc:interceptors>-->

</beans>